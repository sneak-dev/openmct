/*****************************************************************************
 * Open MCT, Copyright (c) 2014-2018, United States Government
 * as represented by the Administrator of the National Aeronautics and Space
 * Administration. All rights reserved.
 *
 * Open MCT is licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * Open MCT includes source code licensed under additional open source
 * licenses. See the Open Source Licenses file (LICENSES.md) included with
 * this source code distribution or the Licensing information page available
 * at runtime from the About dialog for additional information.
 *****************************************************************************/

/************************** FONTS */
@font-face {
    /*
    * Use https://icomoon.io/app with icomoon-project-openmct-symbols-16px.json to generate font files
    */
    font-family: 'symbolsfont';
    src: url($dirFonts + 'openmct-symbols-16px.eot');
    src: url($dirFonts + 'openmct-symbols-16px.eot?#iefix') format('embedded-opentype'),
    url($dirFonts + 'openmct-symbols-16px.woff') format('woff'),
    url($dirFonts + 'openmct-symbols-16px.ttf') format('truetype'),
    url($dirFonts + 'openmct-symbols-16px.svg') format('svg');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    /*
    * Use https://icomoon.io/app with icomoon-project-openmct-symbols-12px.json to generate font files
    */
    font-family: 'symbolsfont-12px';
    src: url($dirFonts + 'openmct-symbols-12px.eot');
    src: url($dirFonts + 'openmct-symbols-12px.eot?#iefix') format('embedded-opentype'),
    url($dirFonts + 'openmct-symbols-12px.woff') format('woff'),
    url($dirFonts + 'openmct-symbols-12px.ttf') format('truetype'),
    url($dirFonts + 'openmct-symbols-12px.svg') format('svg');
    font-weight: normal;
    font-style: normal;
}

/******************************* RESETS */
*,
:before,
:after {
    box-sizing: border-box;
}

div {
    position: relative;
}

/******************************* UTILITIES */
.u-contents {
    display: contents;
}

.u-space {
    // Provides a separator space between elements
    &--right {
        + [class*="__"] {
            margin-left: $interiorMarginLg !important;
        }
    }
}

/******************************* BROWSER ELEMENTS */
body.desktop {
    ::-webkit-scrollbar {
        box-sizing: border-box;
        box-shadow: inset $scrollbarTrackShdw;
        background-color: $scrollbarTrackColorBg;
        height: $scrollbarTrackSize;
        width: $scrollbarTrackSize;
    }

    ::-webkit-scrollbar-thumb {
        box-sizing: border-box;
        background: $scrollbarThumbColor;
        &:hover {
            background: $scrollbarThumbColorHov;
        }
    }

    ::-webkit-scrollbar-corner {
        background: transparent;
    }

    .c-menu ::-webkit-scrollbar-thumb {
        background: $scrollbarThumbColorMenu;
        &:hover {
            background: $scrollbarThumbColorMenuHov;
        }
    }
}

/************************** HTML ENTITIES */
a {
    color: $colorA;
    cursor: pointer;
    text-decoration: none;
    &:hover {
        color: $colorAHov;
    }
}

body, html {
    height: 100%;
    width: 100%;
}

body {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: $fontBaseSize;
    font-weight: normal;
    background-color: $colorBodyBg;
    color: $colorBodyFg;
}

em {
    font-style: normal;
}

h1, h2, h3 {
    letter-spacing: 0.04em;
    margin: 0;
}

h1 {
    font-size: 1em;
    font-weight: normal !important;
    letter-spacing: 0.04em;
    line-height: 120%;
    margin-bottom: 20px;
    margin-top: 0;
}

p {
    margin-bottom: $interiorMarginLg;
}

ol, ul {
    list-style: none;
    margin: 0;
    padding-left: 0;
}

table {
    border-spacing: 0;
    border-collapse: collapse;
}

li {
    list-style-type: none;
    margin: 0;
    padding: 0;
}

/******************************************************** HAS */
// Local Controls: Controls placed in proximity to or overlaid on components and views
body.desktop .has-local-controls {
    // Provides hover ability to show local controls
    &:hover [class*="local-controls--hidden"] {
        transition: opacity 50ms ease-in-out;
        opacity: 1;
        pointer-events: inherit;
    }

    [class*="local-controls--hidden"] {
        transition: opacity 500ms ease-in-out;
        opacity: 0;
        pointer-events: none;
    }
}

//[class*="local-controls"] {
//    // An explicit outer holder for controls. Typically placed in upper right.
//    //font-size: 0.7rem;
//    display: flex;
//    align-items: center;
//    justify-content: flex-end;
//
//
//    &.h-local-controls-overlay-content {
//        // Imagery controls
//        $p: $interiorMargin;
//        position: absolute;
//        top: $p; right: $p;
//        z-index: 2;
//    }

    //.l-btn-set,
    //.s-button {
    //    &:not(:first-child) {
    //        margin-left: $interiorMargin;
    //    }
    //}
//}

/************************** LEGACY */

mct-container {
    display: block;
}

.abs {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    height: auto;
    width: auto;
}

.code {
    font-family: "Lucida Console", monospace;
    font-size: 0.7em;
    line-height: 150%;
    white-space: pre;
}

.codehilite {
    @extend .code;
    background-color: rgba($colorBodyFg, 0.1);
    padding: 1em;
}

.disabled,
a.disabled {
    opacity: $controlDisabledOpacity;
    pointer-events: none !important;
    cursor: default !important;
}

.s-status-missing {
    // Labels. Expects .s-status-missing to be applied to mct-representation that contains
    .t-object-label .t-item-icon:before {
        content: $glyph-icon-object-unknown;
    }

    // Item, grid item. Expects .s-status-missing to be applied to mct-representation that contains .item.grid-item
    .item .t-item-icon-glyph:before {
        content: $glyph-icon-object-unknown;
    }

    // Object header. Expects .s-status-missing to be applied to mct-representation.object-header
    &.object-header {
        .type-icon:before {
            content: $glyph-icon-object-unknown;
        }
    }

    // Tree item. Expects .s-status-missing to be applied to .tree-item,
    // and mct-representation.search-item
    &.tree-item,
    &.search-item {
        > .rep-object-label .t-item-icon:before {
            content: $glyph-icon-object-unknown;
        }
    }
}

.align-right {
    text-align: right;
}

.centered {
    text-align: center;
}

.no-selection {
    // aka selection = "None". Used in palettes and their menu buttons.
    $c: red;
    $s: 48%;
    $e: 52%;
    background-image: linear-gradient(-45deg,
            transparent $s - 5%,
            $c $s,
            $c $e,
            transparent $e + 5%
    );
    background-repeat: no-repeat;
    background-size: contain;
}

.scrolling,
.scroll {
    overflow: auto;
}

.vscroll {
    overflow-x: hidden;
    overflow-y: auto;
    &.scroll-pad {
        padding-right: $interiorMargin;
    }
}

.vscroll--persist {
    overflow-x: hidden;
    overflow-y: scroll;
}

.slidable {
    cursor: move; // Fallback
    cursor: grab;
    cursor: -moz-grab;
    cursor: -webkit-grab;
    &.horz {
        cursor: col-resize;
    }
    &.vert {
        cursor: row-resize;
    }
}

.no-margin {
    margin: 0;
}

.ds {
    box-shadow: rgba(#000, 0.7) 0 4px 10px 2px;
}

.capitalize {
    text-transform: capitalize;
}

.hide,
.hidden,
.t-main-view .hide-in-t-main-view {
    display: none !important;
}

.hide-nice {
    opacity: 0;
    pointer-events: none;
}

.invisible {
    display: block;
    visibility: hidden;
    height: 0;
    padding: 0;
    border: 0;
    margin: 0 !important;
    transform: scale(0);
    pointer-events: none;
    position: absolute;
}

.sep {
    color: rgba(#fff, 0.2);
}

.comma-list span {
    &:not(:first-child) {
        &:before {
            content: ', ';
        }
    }
}

/************************** TEMP LEGACY FIXES */
.t-imagery {
    display: contents;
}

.t-frame-outer {
    min-width: 200px;
    min-height: 200px;
}
