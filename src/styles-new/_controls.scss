/******************************************************** BUTTONS */
%c-control {
    @include userSelectNone();
    $fs: 1em;
    display: inline-flex;
    align-items: center;
    font-size: $fs;
    justify-content: start;
    cursor: pointer;

    &:before,
    &:after {
        font-family: symbolsfont;
        display: block;
        flex: 0 0 auto;
    }

    &:after {
        font-size: 0.8em;
    }

    [class*="__label"] {
        line-height: $fs; // Remove effect on top and bottom padding
        font-size: $fs;
    }

}

%c-button {
    @extend %c-control;
    background: $colorBtnBg;
    border-radius: $controlCr;
    color: $colorBtnFg;
    padding: nth($btnPad, 1) nth($btnPad, 2);

    &:hover {
        background: $colorBtnBgHov;
        color: $colorBtnFgHov;
    }

    &[class*="--major"] {
        background: $colorBtnMajorBg;
        color: $colorBtnMajorFg;

        &:hover {
            background: $colorBtnMajorBgHov;
            color: $colorBtnMajorFgHov;
        }
    }
}

/********* Buttons */
// Optionally can include icon in :before via markup
.c-button,
button {
    @extend %c-button;
}

/********* Icon Buttons */
.c-icon-button {
    // A clickable element that just includes the icon, no background
    // Padding is included to facilitate a bigger hit area
    // Make the icon bigger relative to its container
    @extend %c-control;
    $pLR: 3px;
    $pTB: 3px;
    border-radius: $controlCr;
    color: $colorKey;
    font-size: $fontBaseSize * 1.2;
    padding: $pTB $pLR ;

    &:hover {
        background: rgba($colorKey, 0.2);
    }

    &:before {
        font-size: 1.1em;
    }
}

/********* Button Sets */
.c-button-set {
    // Buttons are smashed together with minimal margin
    // c-buttons don't have border-radius between buttons, creates a tool-button-strip look
    // c-icon-buttons get grouped more closely together
    // When one set is adjacent to another, provides a divider between

    display: inline-flex;

    > * {
        // Assume buttons are immediate descendants
        flex: 0 0 auto;

        &[class^="c-button"] {
            // Only apply the following to buttons that have background, eg. c-button
            border-radius: 0;

            + * {
                margin-left: 1px;
            }

            &:first-child {
                border-top-left-radius: $controlCr;
                border-bottom-left-radius: $controlCr;
            }

            &:last-child {
                border-top-right-radius: $controlCr;
                border-bottom-right-radius: $controlCr;
            }
        }
    }

    + .c-button-set {
        $m: $interiorMarginSm;
        &:before {
            content: '';
            display: block;
            width: $m;
            border-right: 1px solid $colorInteriorBorder;
            margin-right: $m;
        }
    }
}

/********* Menu Buttons */
// Always includes :after dropdown arrow
// Optionally can include icon in :before
// Default menu position is down and to the right
// Apply c-menu-button--menus-up and c-menu-button--menus-left to --w wrapper element to modify menu position
.c-menu-button {
    $m: $interiorMarginSm;
    @extend %c-button;

    &:before {
        margin-right: $m;
    }

    &:after {
        content: $glyph-icon-arrow-down;
        font-family: symbolsfont;
        margin-left: $m;
        opacity: 0.5;
    }

    &--w {
        // Wraps c-menu-button, contains button and menu
        .c-menu {
            // Default position
            top: 100%; left: 0;
        }

        &.c-menu-button--menus-up {
            .c-menu {
                top: auto; bottom: 100%;
            }
        }

        &.c-menu-button--menus-left {
            .c-menu {
                left: auto; right: 0;
            }
        }
    }
}

/******************************************************** DISCLOSURE CONTROLS */
/********* Disclosure Button */
// Provides a downward arrow icon that when clicked displays a context menu
// Always placed AFTER an element
.c-disclosure-button {
    @extend .c-icon-button;
    margin-left: $interiorMarginSm;

    &:before {
        content: $glyph-icon-arrow-down;
        font-family: symbolsfont;
        font-size: 0.7em;
    }
}
    /********* Disclosure Triangle */
// Provides an arrow icon that when clicked expands an element to reveal its contents.
// Used in tree items. Always placed BEFORE an element.
.c-disclosure-triangle {
    $d: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 0 0 auto;
    width: $d;
    position: relative;

    &.is-enabled:before {
        $s: .65;
        content: $glyph-icon-arrow-right-equilateral;
        display: block;
        font-family: symbolsfont;
        font-size: 1rem * $s;
        position: absolute;
        transform-origin: floor(($d / 2) * $s); // This is slightly better than 'center'
        transition: transform 100ms ease-in-out;
    }

    &--expanded {
        &:before {
            transform: rotate(90deg);
        }
    }
}


/******************************************************** FORM ELEMENTS */
/********* Inline inputs */
// A text input or contenteditable element that indicates edit affordance on hover and looks like an input on focus
.c-input-inline {
    @include input-base();
    border: 1px solid transparent;
    display: block !important;
    min-width: 0;
    padding-left: 0;
    padding-right: 0;
    overflow: hidden;
    transition: all 250ms ease;
    white-space: nowrap;

    &:not(:focus) {
        text-overflow: ellipsis;
    }

    &:hover,
    &:focus {
        padding-left: $inputTextPLeftRight;
        padding-right: $inputTextPLeftRight;
    }
    &:hover {
        border-color: rgba($colorBodyFg, 0.2);
    }
    &:focus {
        @include nice-input($shdw: rgba(0, 0, 0, 0.6) 0 1px 3px);
        border-color: transparent;
    }
}

/******************************************************** MENUS */
@mixin menuOuter() {
    border-radius: $basicCr;
    background: $colorMenuBg;
    text-shadow: $shdwMenuText;
    padding: $interiorMarginSm;
    box-shadow: $shdwMenu;
    display: block;
    position: absolute;
    z-index: 70;
}

@mixin menuInner() {
    color: $colorMenuFg;
    li {
        @extend %c-control;
        color: $colorMenuFg;
        display: flex;
        padding: nth($menuItemPad, 1) nth($menuItemPad, 2);
        transition: $transIn;
        white-space: nowrap;

        &:hover {
            background: $colorMenuHovBg;
            color: $colorMenuHovFg;
            &:before {
                color: $colorMenuHovIc;
            }
        }
        &:before {
            color: $colorMenuIc;
            font-size: 1em;
            margin-right: $interiorMargin;
        }
    }
}

.c-menu {
    @include menuOuter();
    @include menuInner();
     li {
         &:not(:first-child) {
             border-top: 1px solid pullForward($colorMenuBg, 10%);
         }
     }
}

.c-super-menu {
    // Two column layout, menu items on left with detail of hover element on right
    @include menuOuter();
    display: flex;
    padding: $interiorMarginLg;
    flex-direction: row;

    > [class*="__"] {
        $m: $interiorMarginLg;
        flex: 1 1 50%;
        &:first-child {
            margin-right: $m;
        }

        &:last-child {
            border-left: 1px solid $colorInteriorBorder;
            padding-left: $m;
        }
    }

    &__menu {
        @include menuInner();
        overflow: auto;

        ul {
            margin-right: $interiorMarginSm; // Fend off scrollbar
        }

        li {
            border-radius: $controlCr;
        }
    }

    &__item-description {
        display: flex;
        flex-direction: column;
        justify-content: stretch;

        .l-item-description {
            &__icon,
            &__description {
                //flex: 1 1 50%;
            }

            &__name,
            &__description {
                margin-top: $interiorMarginLg;
            }

            &__icon {
                min-height: 20%;
                margin: 10% 25%;
            }

            &__name {
                flex: 0 0 auto;
                font-size: 1.25em;
            }

            &__description {
                font-size: $fontBaseSize;
            }
        }
    }
}

